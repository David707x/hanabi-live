name: CI

on: [push, pull_request]

jobs:
  client_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/setup
      - run: bash ./packages/client/build_client.sh

  server_build:
    runs-on: ubuntu-latest
    env:
      working-directory: ./server
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Install Golang
        uses: actions/setup-go@v2

      - name: Compile the Golang code
        run: bash build_server.sh
        working-directory: ${{ env.working-directory }}

  lint:
    strategy:
      matrix:
        packageName: [client, data, game, server, utils]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/setup

      - name: Create the "version.js" file
        run: bash ./packages/client/set_version.sh

      - name: Lint the TypeScript code
        run: bash ./packages/${{ matrix.packageName }}/lint.sh

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/setup

      - name: Create the "version.js" file
        run: bash ./packages/client/set_version.sh

      - name: Test the TypeScript code using Jest
        run: yarn test

  spell_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/setup

      - name: Spell check the entire repository
        run: bash spell_check.sh

  discord:
    name: Discord Failure Notification
    needs: [client_build, client_lint, client_test, server_build, spell_check]
    if: always() # This is needed to always run this job, even if the other jobs fail.
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - if: env.WORKFLOW_CONCLUSION != 'success' && env.WORKFLOW_CONCLUSION != 'cancelled'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          title: ""
